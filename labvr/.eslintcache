[{"/home/aashan/VRlab-web/labvr/src/index.js":"1","/home/aashan/VRlab-web/labvr/src/reportWebVitals.js":"2","/home/aashan/VRlab-web/labvr/src/Components/Dashboard/Scores.js":"3","/home/aashan/VRlab-web/labvr/src/utils/Token.js":"4","/home/aashan/VRlab-web/labvr/src/App.jsx":"5","/home/aashan/VRlab-web/labvr/src/Components/Landing/Landing.jsx":"6","/home/aashan/VRlab-web/labvr/src/Components/Landing/Login.jsx":"7","/home/aashan/VRlab-web/labvr/src/Components/Landing/Signup.jsx":"8","/home/aashan/VRlab-web/labvr/src/Components/Landing/Navbar.jsx":"9","/home/aashan/VRlab-web/labvr/src/Components/Landing/Sendemail.jsx":"10","/home/aashan/VRlab-web/labvr/src/Components/Landing/Forgetpassword.jsx":"11","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/studentDash.jsx":"12","/home/aashan/VRlab-web/labvr/src/Components/Dashboard/Profile.jsx":"13","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Finished.jsx":"14","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Experiment.jsx":"15","/home/aashan/VRlab-web/labvr/src/Components/Teacherdash/Teacherdash.jsx":"16","/home/aashan/VRlab-web/labvr/src/Route/Publicroute.jsx":"17","/home/aashan/VRlab-web/labvr/src/Components/Loader/Loader.jsx":"18","/home/aashan/VRlab-web/labvr/src/Route/Adminroute.jsx":"19","/home/aashan/VRlab-web/labvr/src/Route/Userroute.jsx":"20","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Resetpassword.jsx":"21","/home/aashan/VRlab-web/labvr/src/Components/Teacherdash/Experiment.jsx":"22"},{"size":504,"mtime":1619526289764,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1606877802147,"results":"25","hashOfConfig":"24"},{"size":2009,"mtime":1606881635738,"results":"26","hashOfConfig":"24"},{"size":774,"mtime":1606877802147,"results":"27","hashOfConfig":"24"},{"size":1582,"mtime":1622974363640,"results":"28","hashOfConfig":"24"},{"size":2218,"mtime":1619526400510,"results":"29","hashOfConfig":"24"},{"size":3835,"mtime":1622971956675,"results":"30","hashOfConfig":"24"},{"size":5362,"mtime":1624108781774,"results":"31","hashOfConfig":"24"},{"size":677,"mtime":1619526390861,"results":"32","hashOfConfig":"24"},{"size":604,"mtime":1619526386159,"results":"33","hashOfConfig":"24"},{"size":2165,"mtime":1622973952274,"results":"34","hashOfConfig":"24"},{"size":2682,"mtime":1623000943211,"results":"35","hashOfConfig":"24"},{"size":1679,"mtime":1622988953183,"results":"36","hashOfConfig":"24"},{"size":242,"mtime":1619526504307,"results":"37","hashOfConfig":"24"},{"size":3649,"mtime":1624108986969,"results":"38","hashOfConfig":"24"},{"size":8560,"mtime":1623062178070,"results":"39","hashOfConfig":"24"},{"size":574,"mtime":1619526339528,"results":"40","hashOfConfig":"24"},{"size":800,"mtime":1619527428642,"results":"41","hashOfConfig":"24"},{"size":454,"mtime":1619526333924,"results":"42","hashOfConfig":"24"},{"size":506,"mtime":1619526343894,"results":"43","hashOfConfig":"24"},{"size":2613,"mtime":1623050791824,"results":"44","hashOfConfig":"24"},{"size":5772,"mtime":1623050642235,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"oytpe9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"/home/aashan/VRlab-web/labvr/src/index.js",[],["96","97"],"/home/aashan/VRlab-web/labvr/src/reportWebVitals.js",[],"/home/aashan/VRlab-web/labvr/src/Components/Dashboard/Scores.js",[],"/home/aashan/VRlab-web/labvr/src/utils/Token.js",[],"/home/aashan/VRlab-web/labvr/src/App.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Landing/Landing.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Landing/Login.jsx",["98"],"import React from \"react\";\nimport { loginu, logina } from \"../../utils/Token\"\nimport Loader from \"react-loader-spinner\";\nimport axios from 'axios'\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            teacher: false,\n            error: \" \"\n        }\n    }\n\n    Userlogin = e => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.post(\"https://vrlabserver.herokuapp.com/api/login\",\n            {\n                \"user\": this.state.teacher ? \"teacher\" : \"student\",\n                \"email\": this.state.email,\n                \"password\": this.state.password\n            })\n            .then(res => {\n                const token = res.data.token;\n                this.state.teacher ? logina(token) : loginu(token);\n                this.state.teacher ? this.props.switch(\"/teacherdash\") : this.props.switch(\"/studentdash\");\n                console.log(res);\n            })\n            .catch(error => {\n                console.log(error.response);\n                if (error.response && (error.response.data.msg || error.response.data.message)) {\n                    if (error.response.data.msg) this.setState({ error: error.response.data.msg });\n                    else this.setState({ error: error.response.data.message });\n                    if (document.getElementById(\"login-error\"))\n                        document.getElementById(\"login-error\").className = \"error-seen\";\n                    setTimeout(() => {\n                        if (document.getElementById(\"login-error\"))\n                            document.getElementById(\"login-error\").className = \"error-hidden\";\n                        this.setState({ error: \" \" });\n                    }, 5000);\n                }\n            }).finally(() => {\n                this.setState({ loading: false });\n            })\n    }\n    render() {\n        return (\n            <form className=\"landing-div2\" onSubmit={this.Userlogin}>\n                <small id=\"login-error\" className=\"error-hidden\">\n                    <Loader\n                        type=\"Puff\"\n                        color=\"red\"\n                        height={18}\n                        width={18}\n                    // timeout={3000} //3 secs\n                    /> &nbsp;\n                    {this.state.error}\n                </small>\n                <input className=\"normal-input\" type=\"email\" onChange={e => this.setState({ email: e.target.value })} placeholder=\"Email\" required />\n                <input className=\"normal-input\" type=\"password\" onChange={e => this.setState({ password: e.target.value })} placeholder=\"Password\" required />\n                <div className=\"login-buttons\">\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" value={this.state.teacher?0:1} onChange={() => { if (!this.state.loading) this.setState({ teacher: !this.state.teacher }) }} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                    <button type=\"submit\" disabled={this.state.loading}>\n                        {this.state.loading ? <Loader\n                            type=\"TailSpin\"\n                            color=\"aqua\"\n                            height={18}\n                            width={18}\n                        // timeout={3000} //3 secs\n                        /> : null}\n                     &nbsp;\n                        Login as {this.state.teacher ? \"Teacher\" : \"Student\"}\n                    </button>\n                </div>\n                <a style={{ color: \"aqua\", marginTop: \"20px\" }} onClick={() => this.props.switch(\"/send-email\")}>Forgot password?</a>\n            </form>\n        );\n    }\n}\n\n","/home/aashan/VRlab-web/labvr/src/Components/Landing/Signup.jsx",["99"],"/home/aashan/VRlab-web/labvr/src/Components/Landing/Navbar.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Landing/Sendemail.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Landing/Forgetpassword.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Studentdash/studentDash.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Dashboard/Profile.jsx",["100"],"import React from 'react'\nimport logo from '../../Assets/images/ava.png';\nimport { logoutu, logouta } from \"../../utils/Token\"\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = { details: this.props.details }\n    }\n    logout = () => {\n        this.props.teacher ? logouta() : logoutu();\n        this.props.history.push(\"/\");\n        return false;\n    }\n    reset = () => {\n        this.props.teacher ? this.props.history.push(\"/teacher-reset-password\") : this.props.history.push(\"/student-reset-password\");\n    }\n    render() {\n        return (\n            <div className=\"profile\">\n                <img src={logo} className=\"Profile-pic\" alt=\"logo\" />\n                <div className=\"profile-details\">\n                    {this.props.details ? this.props.details.fullname : \" \"}\n                    <br />\n                    {this.props.details ? this.props.details.email : \" \"}\n                    {/* <br/> */}\n                    {/* {this.state.profileval.college} */}\n                </div>\n                {this.props.teacher ? null : <div className=\"profile-selects\">\n                    <span><input type=\"checkbox\" checked={this.props.showsubmitted} onChange={this.props.showSubmitted} /> Submitted</span>\n                    <span><input type=\"checkbox\" checked={this.props.showunsubmitted} onChange={this.props.showUnSubmitted} /> Unsubmitted</span>\n                </div>}\n                <button className=\"logout\" onClick={this.reset}>Reset Password</button>\n                <button className=\"logout\" onClick={this.logout}>Logout</button>\n            </div>\n        );\n    }\n}\nexport default Profile;","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Finished.jsx",[],["101","102"],"/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Experiment.jsx",["103","104"],"/home/aashan/VRlab-web/labvr/src/Components/Teacherdash/Teacherdash.jsx",["105","106","107"],"/home/aashan/VRlab-web/labvr/src/Route/Publicroute.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Loader/Loader.jsx",[],"/home/aashan/VRlab-web/labvr/src/Route/Adminroute.jsx",[],"/home/aashan/VRlab-web/labvr/src/Route/Userroute.jsx",["108"],"import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoginu } from '../utils/Token'\n\nconst PrivateRoute = ({ component: Component, handleToast: handleToast, ...rest }) => {\n\treturn (\n\n\t\t// Show the component only when the user is logged in\n\t\t// Otherwise, redirect the user to /signin page\n\t\t<Route {...rest} render={props => (\n\t\t\tisLoginu() ?\n\t\t\t\t<Component {...props} handleToast={handleToast} />\n\t\t\t\t: <Redirect to=\"/\" />\n\t\t)} />\n\t);\n};\n\nexport default PrivateRoute;","/home/aashan/VRlab-web/labvr/src/Components/Studentdash/Resetpassword.jsx",[],"/home/aashan/VRlab-web/labvr/src/Components/Teacherdash/Experiment.jsx",["109"],"import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport { Accordion, Card, Modal } from \"react-bootstrap\";\n\nexport default class Experiment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      modal_data: {}\n    }\n  }\n\n  closeModal = () => {\n    this.setState({ modal_data: {}, show: false });\n  }\n\n  toStandard = (date) => {\n    // var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    var day = new Date(date);\n    return day.toLocaleString(\"en-US\");\n  }\n  getResult = (data) => {\n    data = JSON.parse(data);\n    if (data.result)\n      return data.result.map((item, key) => {\n        var test = JSON.parse(item);\n        return (\n          <tr>\n            <td>{test.load !== undefined ? test.load : test.weight}</td>\n            <td>{test.ext ? test.ext : test.time}</td>\n          </tr>)\n      })\n  }\n\n  getStudents = (data) => {\n    console.log(data);\n    if (data)\n      return data.map((item, index) => {\n        var start = new Date(item.created_at);\n        return (\n          <tr style={{ cursor: \"pointer\" }} onClick={() => this.setState({ modal_data: item, show: true })}>\n            <td>{index+1}</td>\n            <td>{item.done_by}</td>\n            <td>{start.toLocaleString(\"en-US\")}</td>\n            <td>{item.submitted ? \"Submitted\" : \"Pending\"}</td>\n          </tr>)\n      })\n  }\n\n  render() {\n    const experiment = this.props.experiments.exp_data ?? {};\n    console.log(experiment)\n    if (this.props.experiments)\n      return (\n        <div className=\"\">\n          <Accordion>\n            {Object.keys(experiment).map(key => {\n              return (\n                <Card key={key} style={{ marginBottom: \"10px\", borderBottom: \"1px solid rgba(0,0,0,0.15)\" }}>\n                  <Accordion.Toggle as={Card.Header} eventKey={key}>\n                    <div className=\"accordion-text\">\n                      <div>Experiment - {experiment[key].experiment?.type === \"simple-pendulum\" ? \"Simple Pendulum\" : \"Hooke's Law\"}<br />\n                        <span style={{ fontSize: \"12px\" }}>{this.toStandard(experiment[key].experiment?.created_at)} </span>\n                      </div>\n                      {/* <span style={{ color: experiment.result.submitted ? \"#16253e\" : \"red\", fontSize: \"12px\" }}>{experiment.result.submitted ? \"Submitted\" : \"Not submitted\"}</span> */}\n                    </div>\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={key}>\n                    <Card.Body>\n                      <div className=\"accordion-body\">\n                        {/* <div className=\"accordion-data\">\n                               <span>Key: {experiment.result.key}</span>\n                               <span>Under: {experiment.experiment?.created_by}</span>\n                               <span>Max Score: 40</span>\n                               <span>Your Score: 35</span>\n                               <span>Start Time: {this.toStandard(experiment.result.created_at)}</span>\n                               <span>End Time: {this.toStandard(experiment.result.updated_at)}</span>\n                             </div> */}\n                        {experiment[key]?.results && experiment[key]?.results.length ?\n                          <table id=\"scores\">\n                            <tbody>\n                              <tr>\n                                <th>Slno.</th>\n                                <th>Student</th>\n                                <th>Start time</th>\n                                <th>Status</th>\n                              </tr>\n                              {this.getStudents(experiment[key]?.results)}\n                            </tbody>\n                          </table>\n                          : <div className=\"accordion-body\">No Submissions Yet!</div>}\n                      </div>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>)\n            })}\n          </Accordion>\n          <Modal\n            show={this.state.show}\n            onHide={this.closeModal}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header\n              style={{ backgroundColor: \"#16213e\", color: \"aqua\" }}\n              closeButton >\n              Result\n            </Modal.Header>\n            <Modal.Body\n              style={{ backgroundColor: \"#16213e\", color: \"aqua\" }}\n            >\n              <div className=\"accordion-body\">\n                <div className=\"accordion-data\">\n                  <span>Key: {this.state.modal_data?.key}</span>\n                  {/* <span>Max Score: 40</span> */}\n                  {/* <span>Your Score: 35</span> */}\n                  <span>Start Time: {this.toStandard(this.state.modal_data?.created_at)}</span>\n                  {this.state.modal_data?.submitted ?\n                    <span>End Time: {this.toStandard(this.state.modal_data?.updated_at)}</span>\n                    : <span>Not submitted Yet!</span>}\n                </div>\n                {this.state.modal_data?.result && this.state.modal_data?.result.length ?\n                  <table id=\"scores\">\n                    <tbody>\n                      <tr>\n                        <th>Weights</th>\n                        <th>{experiment[this.state.modal_data?.key].experiment?.type === \"simple-pendulum\" ? \"Time Period\" : \"Extension\"}</th>\n                      </tr>\n                      {this.getResult(this.state.modal_data.result[0])}\n                    </tbody>\n                  </table>\n                  : null}\n              </div>\n\n            </Modal.Body>\n          </Modal>\n        </div>\n      );\n    return <></>\n  }\n}\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":81,"column":17,"nodeType":"116","endLine":81,"endColumn":114},{"ruleId":"117","severity":1,"message":"118","line":40,"column":44,"nodeType":"119","messageId":"120","endLine":40,"endColumn":45,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":5,"column":5,"nodeType":"124","messageId":"125","endLine":8,"endColumn":6},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":3,"nodeType":"124","messageId":"125","endLine":8,"endColumn":4},{"ruleId":"128","severity":1,"message":"129","line":34,"column":58,"nodeType":"130","messageId":"131","endLine":34,"endColumn":60},{"ruleId":"132","severity":1,"message":"133","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":19},{"ruleId":"132","severity":1,"message":"137","line":9,"column":21,"nodeType":"134","messageId":"135","endLine":9,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":5,"column":47,"nodeType":"140","messageId":"141","endLine":5,"endColumn":71,"fix":"142"},{"ruleId":"132","severity":1,"message":"143","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":19},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\l.","Literal","unnecessaryEscape",["146","147"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["144"],["145"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'Scores' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Card' is defined but never used.","no-useless-rename","Destructuring assignment handleToast unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"148","text":"149"},"'Collapsible' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"150","fix":"151","desc":"152"},{"messageId":"153","fix":"154","desc":"155"},[168,192],"handleToast","removeEscape",{"range":"156","text":"157"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"158","text":"159"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1460,1461],"",[1460,1460],"\\"]